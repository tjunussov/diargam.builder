<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0043)http://incrementaldevelopment.com/xsltrick/ -->
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">
        <meta name="generator" content="HTML Tidy for Windows (vers 1st November 2003), see www.w3.org">

        <title>
            Gallery of Stupid XSL/XSLT Tricks
        </title>
        
        <meta name="description" content="Sample XSL and XSLT stylesheets for learning and amusement.">
        <meta name="keywords" content="XML, XSL, XSLT, XSL tutorial, XSLT tutorial, XSL example, XSLT example, XSL sample, XSLT sample, stylesheet, stylesheet tutorial, MT99, XML99, MT 99, XML 99">
        <link rel="stylesheet" href="./Gallery of Stupid XSL XSLT Tricks_files/company.css" type="text/css">
        <link rel="home" href="http://incrementaldevelopment.com/">
        <link rel="author" href="http://incrementaldevelopment.com/hamu/charlie/">
    </head>
    <body>
        <div class="header">
            <h1 class="banner">
                <a href="http://incrementaldevelopment.com/"><img src="./Gallery of Stupid XSL XSLT Tricks_files/blocks.png" alt="Building-blocks logo."><!-- Netscape bug:
                            style='height:87px;width:87px' --></a> Incremental
                Development, Inc.
            </h1>
            <p class="keywords">
                XSL example, XSLT example, XSL sample, XSLT sample, XSL
                tutorial, XSLT tutorial, stupid XSL trick, stupid XSLT trick.
            </p>
        </div>
        <h1>
            Gallery of Stupid XSL and XSLT Tricks
        </h1>
        <p>
            A Stupid XSL/XSLT Trick is a use of XSL/XSLT for something unusual
            or amusing for which it wasn't necessarily designed.
        </p>
        <p>
            Let <a href="mailto:charlie@IncrementalDevelopment.com">charlie@IncrementalDevelopment.com</a>
            know about your XSL/XSLT tricks to and they will be put on proud
            display (or linked to), properly accredited, in this area.
        </p>
        <h2>
            <a name="Bob_Copeland" id="Bob_Copeland">Bob Copeland</a>
        </h2>
        <p>
            <a href="http://bobcopeland.com/">Bob Copeland</a> implemented a
            square root routine in XSLT:
        </p>
        <ul>
            <li>
                <a href="http://bobcopeland.com/srcs/root_xsl.txt">Compute
                square roots using the Babylonian method.</a>
            </li>
        </ul>
        <p>
            He comments:
        </p>
        <blockquote cite="./Gallery of Stupid XSL XSLT Tricks_files/by email">
            <p>
                It would be interesting though if someone put together a set of
                stylesheets implementing a standard math library, e.g.
                including the trig functions via log tables or Taylor series.
                Because you never know when you'll need to compute an arctan
                while generating XML documents.
            </p>
        </blockquote>
        <h2>
            <a name="Mike_Edwards" id="Mike_Edwards">Mike Edwards</a>
        </h2>
        <p>
            <a href="http://www.antholog.com/users.php?mode=profile&uid=4">Mike
            Edwards</a> thinks he saw another version of this idea somewhere. I
            know <a href="http://incrementaldevelopment.com/papers/xsltrick/#discussion">I've
            suggested</a> that someone try it. And now here it is:
        </p>
        <ul>
            <li>
                <a href="http://slashdot.org/comments.pl?sid=88459&cid=7659827">Solve
                the Towers of Hanoi problem with XSLT.</a>
            </li>
        </ul>
        <h2>
            <a name="David_Caveney" id="David_Caveney">David Caveney</a>
        </h2>
        <p>
            <a href="mailto:dcaveney@the-wire.com">David Caveney</a>, of
            <a href="http://www.omnibuilder.com/">OmniSphere</a>, has used XSLT
            to implement feature-based code generation:
        </p>
        <ul>
            <li>
                <a href="http://www.the-wire.com/~dcaveney">Feature-based code
                generation with XSLT.</a>
            </li>
        </ul>
        <h2>
            <a name="Bob_Lyons" id="Bob_Lyons">Bob Lyons</a>
        </h2>
        <p>
            <a href="mailto:boblyons@unidex.com">Bob Lyons</a>, of <a target="_blank" href="http://www.unidex.com/">Unidex</a>, has proved XSLT
               capable of computing anything by:
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://www.unidex.com/turing/utm.htm">Building a
                    universal Turing machine in XSLT.</a>
            </li>
        </ul>
        <h2>
            <a name="Joel_Aufgang" id="Joel_Aufgang">Joel Aufgang</a>
        </h2>
        <p>
            <a href="mailto:aufgang@agile.net">Joel Aufgang</a>, of <a target="_blank" href="http://www.agile.net/">Agile</a>, has used XSLT to create
               fractals:
        </p>
        <ul>
            <li>
                <a href="http://incrementaldevelopment.com/xsltrick/aufgang#fractal">Create
                a fractal Sierpinsky triangle.</a>
            </li>
        </ul>
        <h2>
            <a name="Rick_Jelliffe" id="Rick_Jelliffe">Rick Jelliffe</a>
        </h2>
        <p>
            <a target="_blank" href="http://www.sinica.edu.tw/~ricko/">Rick Jelliffe</a>
               provided one of the inspirations for this gallery:
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://www.oasis-open.org/cover/xslAsValidator19990124.html">Use
                    XSLT as a validation language.</a>
            </li>
            <li>This above idea has been put into very practical use with
            <a target="_blank" href="http://www.ascc.net/xml/resource/schematron/">The
                    Schematron</a>.
            </li>
        </ul>
        <h2>
            <a name="Francis_Norton" id="Francis_Norton">Francis Norton</a>
        </h2>
        <p>
            <a target="_blank" href="http://www.redrice.com/">Francis Norton</a> used XSLT to
               generate a validator (expressed in XSLT):
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://www.redrice.com/ci/generatingXslValidators.html">Generate
                    XSLT that does schema validation.</a>
            </li>
        </ul>
        <h2>
            <a name="Charlie_Halpern-Hamu" id="Charlie_Halpern-Hamu">Charlie Halpern-Hamu</a>
        </h2>
        <p>
            The first three are from the paper presented at Markup Technologies
            '99:
        </p>
        <ul>
            <li>
                <a href="http://incrementaldevelopment.com/papers/xsltrick/#schema-to-instance">
                Transform a schema to a sample instance.</a>
            </li>
            <li>
                <a href="http://incrementaldevelopment.com/papers/xsltrick/#instance-to-schema">
                Transform a sample instance to a schema.</a>
            </li>
            <li>
                <a href="http://incrementaldevelopment.com/papers/xsltrick/#differentiate">
                Differentiate a simple polynomial function.</a>
            </li>
        </ul>
        <ul>
            <li>
                <a href="http://incrementaldevelopment.com/xsltrick/charlie/#quine">Quine:
                Transform any input to a copy of the stylesheet itself.</a> See
                Oliver's approaches below.
            </li>
        </ul>
        <h2>
            <a name="Oliver_Becker" id="Oliver_Becker">Oliver Becker</a>
        </h2>
        <p>
            These were created by <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/index_e.shtml">Oliver
               Becker</a>, Department of Computer Science, Humboldt University
               Berlin:
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/XSLT/#xmlverbatim">
                Format XML in HTML verbatim with syntax highlighting.</a>
            </li>
            <li>
                <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/XSLT/#eratosthenes">
                Compute prime numbers using the sieve of Eratosthenes.</a>
            </li>
            <li>
                <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/XSLT/#loop-compiler">
                Translate iteration elements inside of stylesheets into
                recursive XSLT template calls.</a>
            </li>
            <li>
                <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/XSLT/#merge">Merge
                    two XML documents.</a>
            </li>
            <li>
                <a target="_blank" href="http://www.informatik.hu-berlin.de/~obecker/XSLT/#quine">Quine:
                    Transform any input to a copy of the stylesheet itself.</a>
                    Oliver presents a true Quine and a cheat.
            </li>
        </ul>
        <h2>
            <a name="Chris_Rathman" id="Chris_Rathman">Chris Rathman</a>
        </h2>
        <p>
            <a href="mailto:ChrisRath@AOL.com">Chris Rathman</a> explains: "I
            have been studying a bunch of programming languages of late and
            have used the <a href="http://w3.one.net/~jweirich/oostuff/">Object
            Oriented Shape example on Jim Weirich's page</a> as a kind of
            sample problem for a lot of different languages."
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://www.angelfire.com/tx4/cus/shapes/xsl.html">Object
                    oriented programming in XSLT.</a> This stylesheet does use
                    one non-standard feature that's found in Saxon: node-set.
                    My [Charlie's] understanding is that this feature is likely
                    to be included in a future for version of XSLT.
            </li>
            <li>
                <a target="_blank" href="http://www.angelfire.com/tx4/cus/notes/xslfactorial.html">Factorial
                    function as a demonstration of recursion.</a>
            </li>
            <li>
                <a target="_blank" href="http://www.angelfire.com/tx4/cus/shapes/bottles.html">Ninety-nine
                    Bottles of Beer.</a> Just in case you forgot the lyrics.
            </li>
        </ul>
        <h2>
            <a name="Jean-Marc_Vanel" id="Jean-Marc_Vanel">Jean-Marc Vanel</a>
        </h2>
        <p>
            <a target="_blank" href="http://jmvanel.free.fr/">Jean-Marc Vanel</a> maintains a
               <a target="_blank" href="http://wwbota.free.fr/XSLT_models/README.htm">collection
               of useful XSLT transforms, models and reusable fragments</a>
               under GPL. These have been developed as part of the <a href="http://wwbota.free.fr/">Worlwide Botanical Knowledge Base</a>
               project.
        </p>
        <h2>
            <a name="Josh_Lubell" id="Josh_Lubell">Josh Lubell</a>
        </h2>
        <p>
            <a target="_blank" href="http://www.mel.nist.gov/msidstaff/lubell/">Josh
               Lubell</a>, at NIST, is developing an <a target="_blank" href="http://ats.nist.gov/xsltoolbox/">XSLT toolbox</a>. This
               toolbox currently contains:
        </p>
        <ul>
            <li>
                <a target="_blank" href="http://ats.nist.gov/xsltoolbox/apex.html">APEX</a>,
                    which implements a simple subset HyTime architectural forms
                    adapted to XML.
            </li>
            <li>
                <a target="_blank" href="http://ats.nist.gov/xsltoolbox/atts.html">ATTS</a>,
                    for assigning default attribute values to XML documents.
            </li>
        </ul>
        <h2>
            <a name="Muhammad_Athar_Parvez" id="Muhammad_Athar_Parvez">Muhammad Athar Parvez</a>
        </h2>
        <p>
            <a target="_blank" href="mailto:parvez@ruksun.com">Muhammad Athar Parvez</a>,
               Ruksun Software Tech in Poona, India, has developed a calendar
               generator:
        </p>
        <ul>
            <li>
                <a href="http://incrementaldevelopment.com/xsltrick/parvez#calendar">Generate
                a month calendar given a title, starting day and number of
                days.</a>
            </li>
        </ul>
        <div class="footer">
            <p>
                <a href="mailto:webmaster@IncrementalDevelopment.com">webmaster@IncrementalDevelopment.com</a>
            </p>
            <p>
                [ <a href="http://incrementaldevelopment.com/">Services</a> |
                <a href="http://incrementaldevelopment.com/charlie/">Qualifications</a>
                | <a href="http://incrementaldevelopment.com/papers/xmlaudit/">XML
                Audit</a> | <a href="./Gallery of Stupid XSL XSLT Tricks_files/Gallery of Stupid XSL XSLT Tricks.htm">XSLT Tricks</a> |
                <a href="http://incrementaldevelopment.com/training/">XML
                Training</a> | <a href="http://incrementaldevelopment.com/training/xslt/">XSLT
                Training</a> | <a href="http://incrementaldevelopment.com/links/">Links</a> ]
            </p>
        </div>
    

</body></html>